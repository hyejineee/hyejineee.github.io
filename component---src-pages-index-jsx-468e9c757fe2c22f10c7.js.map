{"version":3,"sources":["webpack:///./src/components/AbouTile/about.module.less","webpack:///./node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/CloseOutlined.js","webpack:///./src/utils/stripTags.js","webpack:///./src/components/PageFragments/HomePage/AboutMe.jsx","webpack:///./node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/CheckOutlined.js","webpack:///./node_modules/rc-progress/es/common.js","webpack:///./node_modules/rc-progress/es/Line.js","webpack:///./node_modules/rc-progress/es/hooks/useId.js","webpack:///./node_modules/rc-progress/es/Circle.js","webpack:///./node_modules/antd/es/progress/progress.js","webpack:///./src/pages/index.jsx","webpack:///./node_modules/@ant-design/icons-svg/es/asn/CloseCircleFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js"],"names":["module","exports","props","ref","AntdIcon","icon","displayName","domHtml","str","__html","pageText","AboutMe","description","toString","replace","title","path","keywords","className","dangerouslySetInnerHTML","defaultProps","percent","prefixCls","strokeColor","strokeLinecap","strokeWidth","style","trailColor","trailWidth","gapPosition","pathsRef","prevTimeStamp","now","Date","updated","current","forEach","pathStyle","transitionDuration","_excluded","_ref","transition","restProps","percentList","Array","isArray","strokeColorList","paths","center","right","pathString","concat","viewBoxString","stackPtg","viewBox","preserveAspectRatio","d","stroke","fillOpacity","map","ptg","index","dashPercent","strokeDasharray","strokeDashoffset","color","length","key","elem","uuid","isBrowserClient","canUseDom","_React$useState","_React$useState2","innerId","setInnerId","retId","id","stripPercentToNumber","toArray","value","mergedValue","getCircleStyle","perimeter","perimeterWithoutGap","offset","rotateDeg","gapDegree","stepSpace","arguments","undefined","offsetDeg","positionDeg","bottom","top","left","transform","transformOrigin","stepPtg","steps","_ref$gapDegree","mergedId","useId","gradientId","radius","VIEW_BOX_SIZE","Math","PI","_ref2","count","space","stepCount","circleStyle","gradient","find","role","x1","y1","x2","y2","Object","keys","sort","a","b","stopColor","r","cx","cy","round","fill","_","circleStyleForStack","opacity","reverse","getStokeList","Header","Sidebar"],"mappings":"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","file":"component---src-pages-index-jsx-468e9c757fe2c22f10c7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutTile\":\"about-module--aboutTile--381PW\",\"aboutBlock\":\"about-module--aboutBlock--1fLBr\",\"mrTp26PX\":\"about-module--mrTp26PX--x5qv6\"};","// This icon file is generated automatically.\nvar CloseOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\"\n      }\n    }]\n  },\n  \"name\": \"close\",\n  \"theme\": \"outlined\"\n};\nexport default CloseOutlined;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","export const stripTags = ipStr => {\n  let str = ipStr\n  if (str === null || str === '') {\n    return false\n  }\n\n  str = str.toString()\n\n  return str.replace(/(<([^>]+)>)/gi, '')\n}\n\nexport const domHtml = str => ({ __html: str })\n","import React from 'react'\nimport { Row, Col } from 'antd'\nimport AboutTile from '../../AbouTile'\nimport { stripTags, domHtml } from '../../../utils/stripTags'\n\nimport SEO from '../../Seo'\n\nconst pageText = {\n  paraOne: `안녕하세요. 현혜진입니다!<br>\n    <br>\n    디자인과 전공 중 '디지털 미디어'수업에서 프로그래밍을 처음 접하였고,<br>\n    상상했던 것을 직접 구현하는 것에 매료되어 대학 휴학 후 학원을 통해 개발에 입문하였습니다. <br>\n    안드로이드 개발자로서 아르바이트 활동과 외주 작업을 하며 '프로그래밍'이 사람들에게 새로운 경험을 제시할 수 있다는 것을 깨달았습니다. <br>\n    끊임없이 새로운 경험을 원하는 사람들의 니즈에 발맞춰 성장하는 개발자가 되고 싶습니다.<br>\n    <br>\n    <h3>저는, </h3>\n    <br>\n\n    <b>변경에 유연하게 대응할 수 있는 구조에 대해서 관심이 많습니다.</b>\n    <ul>\n      <li>사용자에게 더 나은 서비스를 제공하기 위해서는 서비스는 변화에 유연하게 대응할 수 있어야 합니다.</li>\n      <li>관심사를 분리하고 의존성을 최소화하여 변경에 유연한 구조를 설계하기 위해 항상 테스트 코드를 짜며 개발하고 있습니다.</li>\n    </ul>\n\n    <br>\n\n    <b>함께 성장할 수 있습니다.</b>\n    <ul>\n      <li>현재 우리가 갖고 있는 문제점을 파악하고, 더 나은 해결 방법을 공유하고 동료와 더불어 학습합니다.</li>\n      <li>프로젝트에 테스트 코드를 작성하기 쉬운 유연한 구조를 만들기 위해 팀원과 함께 repository 패턴 도입을 의논하고 \n       필요한 개념을 학습하여 프로젝트에 적용한 경험이 있습니다. </li>\n    </ul>\n\n    <br>\n\n    <b>비효율 적인 것을 개선하는 것을 좋아합니다.</b>\n    <ul>\n      <li>비효율적으로 사용되는 부분을 찾아 리팩터링을 진행합니다.</li>\n      <li>프로젝트에서 반응형을 위해서 비효율적으로 사용되고 있는 미디어 쿼리 구문을 emotion의 composition 개념을 활용해\n       재사용할 수 있는 함수로 리팩터링한 경험이 있습니다.</li>\n    </ul>\n\n    <br>\n    \n    <b>개발 외적으로, </b>\n    <ul>\n      <li>호기심을 원동력으로 공부하고 있습니다. 항상 왜? 어떻게?라는 질문을 통해서 관심 있는 분야의 지식을 쌓습니다.</li>\n      <li>사용자 경험을 디자인 하는 것에 관심이 있습니다. 어떤 정보를 어떤 방식으로 전달해야 내가 원하는 만큼의 가치를 사용자에게 전달할 수 있을까를 고민합니다. \n    기회가 된다면 UX에 대해서 제대로 공부하고 싶습니다. </li>\n      <li>모험을 좋아합니다. 새로운 것을 경험하면서 사는데 필요한 가치관을 찾아 가는 중입니다.</li>\n    </ul>\n\n    <br>\n   `,\n}\n\nconst AboutMe = () => {\n  const description = `${stripTags(pageText.paraOne)}`\n  return (\n    <>\n      <div>\n        <SEO\n          title=\"About\"\n          description={description}\n          path=\"\"\n          keywords={[\n            'hyejineee',\n            'Backpacking',\n            'android developer',\n            'frontend developer',\n            'Javascript',\n            'Typescript',\n            'Nextjs',\n            'ReactJS',\n            'Android',\n            'Gatsby',\n            'Kotlin',\n          ]}\n        />\n        <h1 className=\"titleSeparate\">About Me</h1>\n        <p dangerouslySetInnerHTML={domHtml(pageText.paraOne)} />\n      </div>\n      \n    </>\n  )\n}\nexport default AboutMe\n","// This icon file is generated automatically.\nvar CheckOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\"\n      }\n    }]\n  },\n  \"name\": \"check\",\n  \"theme\": \"outlined\"\n};\nexport default CheckOutlined;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","import { useRef, useEffect } from 'react';\nexport var defaultProps = {\n  className: '',\n  percent: 0,\n  prefixCls: 'rc-progress',\n  strokeColor: '#2db7f5',\n  strokeLinecap: 'round',\n  strokeWidth: 1,\n  style: {},\n  trailColor: '#D9D9D9',\n  trailWidth: 1,\n  gapPosition: 'bottom'\n};\nexport var useTransitionDuration = function useTransitionDuration() {\n  var pathsRef = useRef([]);\n  var prevTimeStamp = useRef(null);\n  useEffect(function () {\n    var now = Date.now();\n    var updated = false;\n    pathsRef.current.forEach(function (path) {\n      if (!path) {\n        return;\n      }\n      updated = true;\n      var pathStyle = path.style;\n      pathStyle.transitionDuration = '.3s, .3s, .3s, .06s';\n      if (prevTimeStamp.current && now - prevTimeStamp.current < 100) {\n        pathStyle.transitionDuration = '0s, 0s';\n      }\n    });\n    if (updated) {\n      prevTimeStamp.current = Date.now();\n    }\n  });\n  return pathsRef.current;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"percent\", \"prefixCls\", \"strokeColor\", \"strokeLinecap\", \"strokeWidth\", \"style\", \"trailColor\", \"trailWidth\", \"transition\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useTransitionDuration, defaultProps } from './common';\nvar Line = function Line(_ref) {\n  var className = _ref.className,\n    percent = _ref.percent,\n    prefixCls = _ref.prefixCls,\n    strokeColor = _ref.strokeColor,\n    strokeLinecap = _ref.strokeLinecap,\n    strokeWidth = _ref.strokeWidth,\n    style = _ref.style,\n    trailColor = _ref.trailColor,\n    trailWidth = _ref.trailWidth,\n    transition = _ref.transition,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  // eslint-disable-next-line no-param-reassign\n  delete restProps.gapPosition;\n  var percentList = Array.isArray(percent) ? percent : [percent];\n  var strokeColorList = Array.isArray(strokeColor) ? strokeColor : [strokeColor];\n  var paths = useTransitionDuration();\n  var center = strokeWidth / 2;\n  var right = 100 - strokeWidth / 2;\n  var pathString = \"M \".concat(strokeLinecap === 'round' ? center : 0, \",\").concat(center, \"\\n         L \").concat(strokeLinecap === 'round' ? right : 100, \",\").concat(center);\n  var viewBoxString = \"0 0 100 \".concat(strokeWidth);\n  var stackPtg = 0;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: classNames(\"\".concat(prefixCls, \"-line\"), className),\n    viewBox: viewBoxString,\n    preserveAspectRatio: \"none\",\n    style: style\n  }, restProps), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"\".concat(prefixCls, \"-line-trail\"),\n    d: pathString,\n    strokeLinecap: strokeLinecap,\n    stroke: trailColor,\n    strokeWidth: trailWidth || strokeWidth,\n    fillOpacity: \"0\"\n  }), percentList.map(function (ptg, index) {\n    var dashPercent = 1;\n    switch (strokeLinecap) {\n      case 'round':\n        dashPercent = 1 - strokeWidth / 100;\n        break;\n      case 'square':\n        dashPercent = 1 - strokeWidth / 2 / 100;\n        break;\n      default:\n        dashPercent = 1;\n        break;\n    }\n    var pathStyle = {\n      strokeDasharray: \"\".concat(ptg * dashPercent, \"px, 100px\"),\n      strokeDashoffset: \"-\".concat(stackPtg, \"px\"),\n      transition: transition || 'stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear'\n    };\n    var color = strokeColorList[index] || strokeColorList[strokeColorList.length - 1];\n    stackPtg += ptg;\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: index,\n      className: \"\".concat(prefixCls, \"-line-path\"),\n      d: pathString,\n      strokeLinecap: strokeLinecap,\n      stroke: color,\n      strokeWidth: strokeWidth,\n      fillOpacity: \"0\",\n      ref: function ref(elem) {\n        // https://reactjs.org/docs/refs-and-the-dom.html#callback-refs\n        // React will call the ref callback with the DOM element when the component mounts,\n        // and call it with `null` when it unmounts.\n        // Refs are guaranteed to be up-to-date before componentDidMount or componentDidUpdate fires.\n        paths[index] = elem;\n      },\n      style: pathStyle\n    });\n  }));\n};\nLine.defaultProps = defaultProps;\nLine.displayName = 'Line';\nexport default Line;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nvar uuid = 0;\n/** Is client side and not jsdom */\nexport var isBrowserClient = process.env.NODE_ENV !== 'test' && canUseDom();\n/** Get unique id for accessibility usage */\nfunction getUUID() {\n  var retId;\n  // Test never reach\n  /* istanbul ignore if */\n  if (isBrowserClient) {\n    retId = uuid;\n    uuid += 1;\n  } else {\n    retId = 'TEST_OR_SSR';\n  }\n  return retId;\n}\nexport default (function (id) {\n  // Inner id for accessibility usage. Only work in client side\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    innerId = _React$useState2[0],\n    setInnerId = _React$useState2[1];\n  React.useEffect(function () {\n    setInnerId(\"rc_progress_\".concat(getUUID()));\n  }, []);\n  return id || innerId;\n});","import \"core-js/modules/es.array.sort.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"steps\", \"strokeWidth\", \"trailWidth\", \"gapDegree\", \"gapPosition\", \"trailColor\", \"strokeLinecap\", \"style\", \"className\", \"strokeColor\", \"percent\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { defaultProps, useTransitionDuration } from './common';\nimport useId from './hooks/useId';\nfunction stripPercentToNumber(percent) {\n  return +percent.replace('%', '');\n}\nfunction toArray(value) {\n  var mergedValue = value !== null && value !== void 0 ? value : [];\n  return Array.isArray(mergedValue) ? mergedValue : [mergedValue];\n}\nvar VIEW_BOX_SIZE = 100;\nvar getCircleStyle = function getCircleStyle(perimeter, perimeterWithoutGap, offset, percent, rotateDeg, gapDegree, gapPosition, strokeColor, strokeLinecap, strokeWidth) {\n  var stepSpace = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;\n  var offsetDeg = offset / 100 * 360 * ((360 - gapDegree) / 360);\n  var positionDeg = gapDegree === 0 ? 0 : {\n    bottom: 0,\n    top: 180,\n    left: 90,\n    right: -90\n  }[gapPosition];\n  var strokeDashoffset = (100 - percent) / 100 * perimeterWithoutGap;\n  // Fix percent accuracy when strokeLinecap is round\n  // https://github.com/ant-design/ant-design/issues/35009\n  if (strokeLinecap === 'round' && percent !== 100) {\n    strokeDashoffset += strokeWidth / 2;\n    // when percent is small enough (<= 1%), keep smallest value to avoid it's disappearance\n    if (strokeDashoffset >= perimeterWithoutGap) {\n      strokeDashoffset = perimeterWithoutGap - 0.01;\n    }\n  }\n  return {\n    stroke: typeof strokeColor === 'string' ? strokeColor : undefined,\n    strokeDasharray: \"\".concat(perimeterWithoutGap, \"px \").concat(perimeter),\n    strokeDashoffset: strokeDashoffset + stepSpace,\n    transform: \"rotate(\".concat(rotateDeg + offsetDeg + positionDeg, \"deg)\"),\n    transformOrigin: '0 0',\n    transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s',\n    fillOpacity: 0\n  };\n};\nvar Circle = function Circle(_ref) {\n  var id = _ref.id,\n    prefixCls = _ref.prefixCls,\n    steps = _ref.steps,\n    strokeWidth = _ref.strokeWidth,\n    trailWidth = _ref.trailWidth,\n    _ref$gapDegree = _ref.gapDegree,\n    gapDegree = _ref$gapDegree === void 0 ? 0 : _ref$gapDegree,\n    gapPosition = _ref.gapPosition,\n    trailColor = _ref.trailColor,\n    strokeLinecap = _ref.strokeLinecap,\n    style = _ref.style,\n    className = _ref.className,\n    strokeColor = _ref.strokeColor,\n    percent = _ref.percent,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var mergedId = useId(id);\n  var gradientId = \"\".concat(mergedId, \"-gradient\");\n  var radius = VIEW_BOX_SIZE / 2 - strokeWidth / 2;\n  var perimeter = Math.PI * 2 * radius;\n  var rotateDeg = gapDegree > 0 ? 90 + gapDegree / 2 : -90;\n  var perimeterWithoutGap = perimeter * ((360 - gapDegree) / 360);\n  var _ref2 = _typeof(steps) === 'object' ? steps : {\n      count: steps,\n      space: 2\n    },\n    stepCount = _ref2.count,\n    stepSpace = _ref2.space;\n  var circleStyle = getCircleStyle(perimeter, perimeterWithoutGap, 0, 100, rotateDeg, gapDegree, gapPosition, trailColor, strokeLinecap, strokeWidth);\n  var percentList = toArray(percent);\n  var strokeColorList = toArray(strokeColor);\n  var gradient = strokeColorList.find(function (color) {\n    return color && _typeof(color) === 'object';\n  });\n  var paths = useTransitionDuration();\n  var getStokeList = function getStokeList() {\n    var stackPtg = 0;\n    return percentList.map(function (ptg, index) {\n      var color = strokeColorList[index] || strokeColorList[strokeColorList.length - 1];\n      var stroke = color && _typeof(color) === 'object' ? \"url(#\".concat(gradientId, \")\") : undefined;\n      var circleStyleForStack = getCircleStyle(perimeter, perimeterWithoutGap, stackPtg, ptg, rotateDeg, gapDegree, gapPosition, color, strokeLinecap, strokeWidth);\n      stackPtg += ptg;\n      return /*#__PURE__*/React.createElement(\"circle\", {\n        key: index,\n        className: \"\".concat(prefixCls, \"-circle-path\"),\n        r: radius,\n        cx: 0,\n        cy: 0,\n        stroke: stroke,\n        strokeLinecap: strokeLinecap,\n        strokeWidth: strokeWidth,\n        opacity: ptg === 0 ? 0 : 1,\n        style: circleStyleForStack,\n        ref: function ref(elem) {\n          // https://reactjs.org/docs/refs-and-the-dom.html#callback-refs\n          // React will call the ref callback with the DOM element when the component mounts,\n          // and call it with `null` when it unmounts.\n          // Refs are guaranteed to be up-to-date before componentDidMount or componentDidUpdate fires.\n          paths[index] = elem;\n        }\n      });\n    }).reverse();\n  };\n  var getStepStokeList = function getStepStokeList() {\n    // only show the first percent when pass steps\n    var current = Math.round(stepCount * (percentList[0] / 100));\n    var stepPtg = 100 / stepCount;\n    var stackPtg = 0;\n    return new Array(stepCount).fill(null).map(function (_, index) {\n      var color = index <= current - 1 ? strokeColorList[0] : trailColor;\n      var stroke = color && _typeof(color) === 'object' ? \"url(#\".concat(gradientId, \")\") : undefined;\n      var circleStyleForStack = getCircleStyle(perimeter, perimeterWithoutGap, stackPtg, stepPtg, rotateDeg, gapDegree, gapPosition, color, 'butt', strokeWidth, stepSpace);\n      stackPtg += (perimeterWithoutGap - circleStyleForStack.strokeDashoffset + stepSpace) * 100 / perimeterWithoutGap;\n      return /*#__PURE__*/React.createElement(\"circle\", {\n        key: index,\n        className: \"\".concat(prefixCls, \"-circle-path\"),\n        r: radius,\n        cx: 0,\n        cy: 0,\n        stroke: stroke\n        // strokeLinecap={strokeLinecap}\n        ,\n\n        strokeWidth: strokeWidth,\n        opacity: 1,\n        style: circleStyleForStack,\n        ref: function ref(elem) {\n          paths[index] = elem;\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: classNames(\"\".concat(prefixCls, \"-circle\"), className),\n    viewBox: \"\".concat(-VIEW_BOX_SIZE / 2, \" \").concat(-VIEW_BOX_SIZE / 2, \" \").concat(VIEW_BOX_SIZE, \" \").concat(VIEW_BOX_SIZE),\n    style: style,\n    id: id,\n    role: \"presentation\"\n  }, restProps), gradient && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: gradientId,\n    x1: \"100%\",\n    y1: \"0%\",\n    x2: \"0%\",\n    y2: \"0%\"\n  }, Object.keys(gradient).sort(function (a, b) {\n    return stripPercentToNumber(a) - stripPercentToNumber(b);\n  }).map(function (key, index) {\n    return /*#__PURE__*/React.createElement(\"stop\", {\n      key: index,\n      offset: key,\n      stopColor: gradient[key]\n    });\n  }))), !stepCount && /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"\".concat(prefixCls, \"-circle-trail\"),\n    r: radius,\n    cx: 0,\n    cy: 0,\n    stroke: trailColor,\n    strokeLinecap: strokeLinecap,\n    strokeWidth: trailWidth || strokeWidth,\n    style: circleStyle\n  }), stepCount ? getStepStokeList() : getStokeList());\n};\nCircle.defaultProps = defaultProps;\nCircle.displayName = 'Circle';\nexport default Circle;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { tuple } from '../_util/type';\nimport warning from '../_util/warning';\nimport Circle from './Circle';\nimport Line from './Line';\nimport Steps from './Steps';\nimport { getSuccessPercent, validProgress } from './utils';\nvar ProgressTypes = tuple('line', 'circle', 'dashboard');\nvar ProgressStatuses = tuple('normal', 'exception', 'active', 'success');\nvar Progress = function Progress(props) {\n  var _classNames;\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    steps = props.steps,\n    strokeColor = props.strokeColor,\n    _props$percent = props.percent,\n    percent = _props$percent === void 0 ? 0 : _props$percent,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'default' : _props$size,\n    _props$showInfo = props.showInfo,\n    showInfo = _props$showInfo === void 0 ? true : _props$showInfo,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'line' : _props$type,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"steps\", \"strokeColor\", \"percent\", \"size\", \"showInfo\", \"type\"]);\n  function getPercentNumber() {\n    var successPercent = getSuccessPercent(props);\n    return parseInt(successPercent !== undefined ? successPercent.toString() : percent.toString(), 10);\n  }\n  function getProgressStatus() {\n    var status = props.status;\n    if (!ProgressStatuses.includes(status) && getPercentNumber() >= 100) {\n      return 'success';\n    }\n    return status || 'normal';\n  }\n  function renderProcessInfo(prefixCls, progressStatus) {\n    var format = props.format;\n    var successPercent = getSuccessPercent(props);\n    if (!showInfo) {\n      return null;\n    }\n    var text;\n    var textFormatter = format || function (percentNumber) {\n      return \"\".concat(percentNumber, \"%\");\n    };\n    var isLineType = type === 'line';\n    if (format || progressStatus !== 'exception' && progressStatus !== 'success') {\n      text = textFormatter(validProgress(percent), validProgress(successPercent));\n    } else if (progressStatus === 'exception') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CloseCircleFilled, null) : /*#__PURE__*/React.createElement(CloseOutlined, null);\n    } else if (progressStatus === 'success') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CheckCircleFilled, null) : /*#__PURE__*/React.createElement(CheckOutlined, null);\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-text\"),\n      title: typeof text === 'string' ? text : undefined\n    }, text);\n  }\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var prefixCls = getPrefixCls('progress', customizePrefixCls);\n  var progressStatus = getProgressStatus();\n  var progressInfo = renderProcessInfo(prefixCls, progressStatus);\n  process.env.NODE_ENV !== \"production\" ? warning(!('successPercent' in props), 'Progress', '`successPercent` is deprecated. Please use `success.percent` instead.') : void 0;\n  var strokeColorNotArray = Array.isArray(strokeColor) ? strokeColor[0] : strokeColor;\n  var strokeColorNotGradient = typeof strokeColor === 'string' || Array.isArray(strokeColor) ? strokeColor : undefined;\n  var progress;\n  // Render progress shape\n  if (type === 'line') {\n    progress = steps ? /*#__PURE__*/React.createElement(Steps, _extends({}, props, {\n      strokeColor: strokeColorNotGradient,\n      prefixCls: prefixCls,\n      steps: steps\n    }), progressInfo) : /*#__PURE__*/React.createElement(Line, _extends({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      direction: direction\n    }), progressInfo);\n  } else if (type === 'circle' || type === 'dashboard') {\n    progress = /*#__PURE__*/React.createElement(Circle, _extends({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      progressStatus: progressStatus\n    }), progressInfo);\n  }\n  var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type === 'dashboard' && 'circle' || steps && 'steps' || type), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(progressStatus), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-info\"), showInfo), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, omit(restProps, ['status', 'format', 'trailColor', 'strokeWidth', 'width', 'gapDegree', 'gapPosition', 'strokeLinecap', 'success', 'successPercent']), {\n    className: classString,\n    role: \"progressbar\"\n  }), progress);\n};\nexport default Progress;","import React from 'react'\nimport { Layout } from 'antd'\nimport Header from '../components/PageLayout/Header'\n\nimport SidebarWrapper from '../components/PageLayout/Sidebar'\nimport AboutMe from '../components/PageFragments/HomePage/AboutMe'\nimport Skills from '../components/PageFragments/HomePage/SkillProgress'\n\nexport default () => (\n  <Layout className=\"outerPadding\">\n    <Layout className=\"container\">\n      <Header />\n      <SidebarWrapper>\n        <>\n          <AboutMe />\n          {/* <Skills /> */}\n        </>\n      </SidebarWrapper>\n    </Layout>\n  </Layout>\n)\n","// This icon file is generated automatically.\nvar CloseCircleFilled = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\"\n      }\n    }]\n  },\n  \"name\": \"close-circle\",\n  \"theme\": \"filled\"\n};\nexport default CloseCircleFilled;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CloseCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseCircleFilled = function CloseCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseCircleFilledSvg\n  }));\n};\nCloseCircleFilled.displayName = 'CloseCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleFilled);","// This icon file is generated automatically.\nvar CheckCircleFilled = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\"\n      }\n    }]\n  },\n  \"name\": \"check-circle\",\n  \"theme\": \"filled\"\n};\nexport default CheckCircleFilled;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nCheckCircleFilled.displayName = 'CheckCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);"],"sourceRoot":""}